@startuml
participant Actor
Actor -> VehicleRentalController : handleChangeRental()
alt selectedDealershipId == null
    VehicleRentalController -> VehicleRentalController : showAlert()
end
alt selectedVehicle == null
    VehicleRentalController -> VehicleRentalController : showAlert()
end
VehicleRentalController -> AppStateManager : findADealership()
AppStateManager -> Company : findDealership()
loop listDealerships
    alt dealership.getDealerId().equals(dealerId)
        Company --> AppStateManager: Dealership
    end
end
Company --> AppStateManager: null
AppStateManager --> VehicleRentalController
alt dealership == null
    VehicleRentalController -> VehicleRentalController : showAlert()
end
alt success
    VehicleRentalController -> AppStateManager : updateDealershipVehicleRentalState()
    AppStateManager -> Company : updateVehicleRental()
    Company -> Company : findDealership()
    loop listDealerships
        alt dealership.getDealerId().equals(dealerId)
            Company --> AppStateManager: Dealership
        end
    end
    Company --> AppStateManager: null
    Company --> Company
    alt !vehicle.getVehicleType().equalsIgnoreCase("Sports car")
        alt vehicle.getRentalStatus()
            Company -> Vehicle : disableRental()
            Vehicle -> RentalStrategy : disableRental()
            RentalStrategy --> Vehicle
            Vehicle --> Company
        else
            Company -> Vehicle : enableRental()
            Vehicle -> RentalStrategy : enableRental()
            RentalStrategy --> Vehicle
            Vehicle --> Company
        end
    else
        create VehicleNotRentableException
        Company -> VehicleNotRentableException : new
        create RentalException
        VehicleNotRentableException -> RentalException : new
        RentalException --> VehicleNotRentableException
        VehicleNotRentableException --> Company
    end
    alt dealership.getSaleVehicles().contains(vehicle)
        Company -> Dealership: getSaleVehicles()
        Dealership --> Company: salesInventory
        Company -> Company: remove(vehicle)
    else
        Company -> Dealership: getRentalVehicles()
        Dealership --> Company: rentalInventory
        Company -> Company: remove(vehicle)
    end
    Company --> AppStateManager
    AppStateManager --> VehicleRentalController
else error alert
    VehicleRentalController -> VehicleRentalController : showAlert()
end
@enduml